services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    env_file:
      - .env.docker
    volumes:
      - .:/app
      - /var/run/docker.sock:/var/run/docker.sock
      - ./storage:/app/storage
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - ctf_net

  db:
    image: postgres:13
    restart: always
    environment:
      - POSTGRES_USER=ctf_user
      - POSTGRES_PASSWORD=ctf_pass
      - POSTGRES_DB=ctf_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ctf_user -d ctf_db"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - ctf_net

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
    networks:
      - ctf_net

  # Example challenge container (disabled unless the "challenges" profile is enabled)
  challenge1:
    build:
      context: ./challenges/challenge1
    ports:
      - "9001:9000"
    networks:
      - ctf_net
    profiles: ["challenges"]

  # Add additional challenge containers as needed
  # challenge2:
  #   build:
  #     context: ./challenges/challenge2
  #   ports:
  #     - "9002:9000"
  #   networks:
  #     - ctf_net

volumes:
  db_data:

networks:
  ctf_net:
    driver: bridge
